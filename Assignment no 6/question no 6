import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OriginalArrayFinder {
    public static List<Integer> findOriginalArray(int[] changed) {
        Map<Integer, Integer> count = new HashMap<>();
        for (int num : changed) {
            count.put(num, count.getOrDefault(num, 0) + 1);
        }

        List<Integer> original = new ArrayList<>();
        for (Map.Entry<Integer, Integer> entry : count.entrySet()) {
            int num = entry.getKey();
            int freq = entry.getValue();
            int doubleNum = num * 2;
            if (freq > 0 && count.getOrDefault(doubleNum, 0) > 0) {
                count.put(num, count.get(num) - 1);
                count.put(doubleNum, count.get(doubleNum) - 1);
                original.add(num);
            } else if (freq > 0 && count.getOrDefault(doubleNum, 0) == 0) {
                return new ArrayList<>();
            }
        }

        return original;
    }

    public static void main(String[] args) {
        int[] changed = {1, 3, 4, 2, 6, 8};
        List<Integer> original = findOriginalArray(changed);
        System.out.println(original);
    }
}
